@using Nimap_Machine_Test.Models
@model PaginatedList<ProductViewModel>
@{
    ViewData["Title"] = "Product Details";
}

<div class="container p-4">
    <div class="row">
        <div class="col-md-12">
            <h3 class="p-4">Products</h3>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 p-4">
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th scope="col">ProductId</th>
                        <th scope="col">ProductName</th>
                        <th scope="col">CategoryId</th>
                        <th scope="col">CategoryName</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Model.Items)
                    {
                        <tr>
                            <th scope="row">@product.ProductId</th>
                            <td>@product.ProductName</td>
                            <td>@product.CategoryId</td>
                            <td>@product.CategoryName</td>
                            <td>
                                <a class="btn btn-dark btn-sm" asp-controller="Product" asp-action="Edit" asp-route-id="@product.ProductId">Edit</a>
                                <a class="btn btn-danger btn-sm" asp-controller="Product" asp-action="Delete" asp-route-id="@product.ProductId" 
                                   onclick="return confirm('Are you sure you want to delete this Product?')">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    @*Paging*@
    <div class="row">
        <div class="col-md-6">
            <p>
                Showing @Model.Items.Count of @Model.TotalItems products
            </p>
        </div>
        <div class="col-md-6">
            <nav>
                <ul class="pagination justify-content-end">
                    <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                        <a class="page-link text-black" asp-route-pageNumber="1">
                            <span>First</span>
                        </a>
                    </li>

                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link text-black" asp-route-pageNumber="@(Model.PageIndex - 1)">
                            <span>Previous</span>
                        </a>
                    </li>

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                            <a class="page-link text-black" asp-route-pageNumber="@i">@i</a>
                        </li>
                    }

                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link text-black" asp-route-pageNumber="@(Model.PageIndex + 1)">
                            <span>Next</span>
                        </a>
                    </li>
                    <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link text-black" asp-route-pageNumber="@Model.TotalPages">
                            <span>Last</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>